@using Microsoft.AspNetCore.Mvc
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<div class="row">
    <div class="col-xl-4 col-lg-5 col-md-6 offset-xl-2 offset-lg-1">
        <div class="card bg-light">
            <div class="card-header text-white bg-info" id="device_header">
                Device Status
            </div>
            <div class="card-body" id="device_status">
                Checking device status...
            </div>
        </div>
    </div>
    <div class="col-xl-4 col-lg-5 col-md-6">
        <div class="card bg-light">
            <div class="card-header text-white bg-info" id="repo_header">
                Repository Status
            </div>
            <div class="card-body" id="repo_status">
                Checking repository status...
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="card bg-light">
            <div class="card-header text-white bg-info" id="export_header">
                Export Status
            </div>
            <div class="card-body" id="export_status">
                Checking export status...
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
    //<![CDATA[
    
    const repoCheck = '@(Url.ActionLink("Status", "Repo"))';
    const repoSync = '@(Url.ActionLink("Sync", "Repo"))';
    const repoInit = '@(Url.ActionLink("Init", "Repo"))';
    const deviceCheck = '@(Url.ActionLink("DeviceReady"))';
    const exportCheck = '@(Url.ActionLink("ExportStatus"))';
    
    function setHeaderColor(header, bgColor, textColor='white')
    {
        if (header.is('.text-' + textColor) && header.is('.bg-' + bgColor))
            return;
        
        header
            .removeClass()
            .addClass('card-header')
            .addClass('text-' + textColor)
            .addClass('bg-' + bgColor);
    }
    
    function setStatusContent(status, content)
    {
        let current = status.html();
        let proposed = content.html();
        
        if (current === proposed)
                return;
        
        status.empty().append(proposed);
    }
    
    function initializeRepo()
    {
        $.ajax({
            url: repoInit,
            method: 'POST',
            dataType: 'json'
        });
    }
    
    function synchronizeRepo()
    {
        $.ajax({
            url: repoSync,
            method: 'POST',
            dataType: 'json'
        });
    }
    
    function checkRepoStatus()
    {
        $.ajax({
            url: repoCheck,
            method: 'GET',
            dataType: 'json',
            success: function(data)
            {
                let header = $('#repo_header');
                let status = $('#repo_status');
                
                if (data.syncComplete)
                {
                    setHeaderColor(header, 'success');
                    
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('The repositories have been synchronized to the database.')
                            .append('<br>')
                            .append('Last sync: ' + data.lastSync)
                            .append('<br>')
                            .append('<a href="javascript:synchronizeRepo()" title="Synchronize Repo">Synchronize Repo to Database</a>')
                    );
                    
                }
                else if (data.syncRunning)
                {
                    setHeaderColor(header, 'warning');
                    
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('The repositories are currently being synchronized to the database.')
                    );
                }
                else if (data.cloneComplete)
                {
                    if (data.lastSync.toLowerCase() === 'never')
                    {
                        setHeaderColor(header, 'warning');
                    }
                    else
                    {
                        setHeaderColor(header, 'info');
                    }
                    
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('The repositories have been cloned locally.')
                            .append('<br>')
                            .append('Last sync: ' + data.lastSync)
                            .append('<br>')
                            .append('<a href="javascript:synchronizeRepo()" title="Synchronize Repo">Synchronize Repo to Database</a>')
                    );
                }
                else if (data.cloneRunning)
                {
                    setHeaderColor(header, 'warning');
                    
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('The repositories are currently being cloned locally.')
                    );
                }
                else
                {
                    if (data.lastSync.toLowerCase() === 'never')
                    {
                        setHeaderColor(header, 'warning');
                    }
                    else
                    {
                        setHeaderColor(header, 'info');
                    }
                    
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('The repositories are not currently available locally.')
                            .append('<br>')
                            .append('Last sync: ' + data.lastSync)
                            .append('<br>')
                            .append('<a href="javascript:initializeRepo()" title="Initialize Repos">Initialize Repos</a>')
                    );
                }
                
                window.setTimeout(checkRepoStatus, 500);
            },
        })
    }
    
    function checkDeviceStatus()
    {
        $.ajax({
            url: deviceCheck,
            method: 'GET',
            dataType: 'json',
            success: function(data)
            {
                let header = $('#device_header');
                let status = $('#device_status');
                
                if (data.ready)
                {
                    setHeaderColor(header, 'success');
                    
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('Test device ' + data.host + ' is configured and available.')
                            .append('<br>')
                            .append('<a href="@Url.Action("Index", "TestDevice")" title="Configure Device">Configure Device</a>')
                    );
                }
                else if (data.configured)
                {
                    setHeaderColor(header, 'danger');
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('Test device ' + data.host + ' is configured but not available.')
                            .append('<br>')
                            .append('<a href="@Url.Action("Index", "TestDevice")" title="Configure Device">Configure Device</a>')
                    );
                }
                else
                {
                    setHeaderColor(header, 'warning');
                    setStatusContent(
                        status,
                        $('<div/>')
                            .append('Test device is not configured.')
                            .append('<br>')
                            .append('<a href="@Url.Action("Index", "TestDevice")" title="Configure Device">Configure Device</a>')
                    );
                }
                window.setTimeout(checkDeviceStatus, 500);
            },
        })
    }
    
    function checkExportReady()
    {
        
    }
    
    $(function(){
        checkDeviceStatus();
        checkRepoStatus();
    });
    
    //]]>
    </script>
}

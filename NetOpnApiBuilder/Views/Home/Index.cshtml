@using Microsoft.AspNetCore.Mvc
@model NetOpnApiBuilder.ViewModels.Home.IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div id="alert_repo_status" class="alert alert-@(Model.RepositoriesCloned ? "success" : "warning")">
        OPNsense repositories @(Model.RepositoriesCloned ? "have been successfully cloned" : "are currently being cloned").
    </div>
    <div id="alert_device_status" class="alert alert-@(Model.DeviceConfigured ? "success" : "warning")">
        @if (Model.DeviceConfigured)
        {
            @:Test device at @(Model.DeviceHost) is configured and available.
        }
        else
        {
            @:Test device needs configured or the device is not available.<br>
            <a asp-controller="TestDevice" asp-action="Index" title="Configure device" class="text-warning">Click here to configure the device.</a>
        }
    </div>
    

</div>

@section Scripts
{
    <script type="text/javascript">
    //<![CDATA[
    
    const repoCheck = '@(Url.ActionLink("ReposReady"))';
    const deviceCheck = '@(Url.ActionLink("DeviceReady"))';
    
    function checkRepoStatus()
    {
        $.ajax({
            url: repoCheck,
            method: 'GET',
            dataType: 'json',
            success: function(data, status,xhr)
            {
                let alert = $('#alert_repo_status');
                
                if (data.ready)
                {
                    alert
                        .removeClass('alert-warning')
                        .addClass('alert-success')
                        .text('OPNsense repositories have been successfully cloned.');
                }
                else
                {
                    window.setTimeout(checkRepoStatus, 500);
                }
            },
        })
    }
    
    function checkDeviceStatus()
    {
        $.ajax({
            url: deviceCheck,
            method: 'GET',
            dataType: 'json',
            success: function(data, status,xhr)
            {
                let alert = $('#alert_device_status');
                
                if (data.ready)
                {
                    alert
                        .removeClass('alert-warning')
                        .addClass('alert-success')
                        .text('Test device at ' + data.host + ' is configured and available.');
                }
                else
                {
                    window.setTimeout(checkDeviceStatus, 500);
                }
            },
        })
    }
    
    @if (!Model.RepositoriesCloned)
    {
    <text>
    window.setTimeout(checkRepoStatus, 500);
    </text>
    }
    
    @if (!Model.DeviceConfigured)
    {
    <text>
    window.setTimeout(checkDeviceStatus, 500);
    </text>
    }
    
    //]]>
    </script>
}

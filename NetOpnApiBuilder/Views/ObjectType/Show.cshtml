@using NetOpnApiBuilder.Extensions
@using NetOpnApiBuilder.Enums
@model ApiObjectType

@{
    ViewBag.Title = "Object Type: " + Model;
    Layout = "_Layout";
}
<div class="row">
    <div class="col-md-8">
        <div class="card bg-light">
            <div class="card-header text-white bg-primary">
                <div class="float-right">
                    <a asp-action="Index" asp-fragment="ot@(Model.ID)" title="Cancel" class="btn btn-light btn-sm">Cancel</a>
                </div>
                Object Type: @Model
            </div>
            <table class="card-body table table-sm">
                <thead>
                <tr>
                    <th colspan="4" clas="text-center">Properties</th>
                </tr>
                <tr>
                    <th>API Name</th>
                    <th>CLR Name</th>
                    <th>Data Type</th>
                    <th class="text-right">@Url.AddButton("ObjectProperty", values: new {objectTypeId = Model.ID})</th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <td colspan="4" class="text-center">@(Model.Properties.Count) propert@(Model.Properties.Count == 1 ? "y" : "ies") @Url.AddButton("ObjectProperty", values: new {objectTypeId = Model.ID})</td>
                </tr>
                </tfoot>
                <tbody>
                @foreach (var prop in Model.Properties.OrderBy(x => x.ApiName))
                {
                    <tr id="prop@(prop.ID)">
                        <td>@prop.ApiName</td>
                        <td>@prop.ClrName</td>
                        <td class="text-center"><span title="@prop.DataType.ToName(prop.CanBeNull)">@(prop.DataType.ToShortName(prop.CanBeNull))</span></td>
                        <td class="text-right">
                            @if (prop.DataType == ApiDataType.String &&
                                 long.TryParse(prop.ImportSample, out _))
                            {
                                <div class="btn-group">
                                    @Url.EditButton(prop.ID, "ObjectProperty")
                                    <button type="button" class="btn btn-primary btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" asp-controller="ObjectProperty" asp-action="SetType" asp-route-id="@prop.ID" asp-route-dataType="Integer" title="Change to Integer">&gt; Integer</a>
                                        <a class="dropdown-item" asp-controller="ObjectProperty" asp-action="SetType" asp-route-id="@prop.ID" asp-route-dataType="LongInteger" title="Change to Integer">&gt; Long</a>
                                        <a class="dropdown-item" asp-controller="ObjectProperty" asp-action="SetType" asp-route-id="@prop.ID" asp-route-dataType="Double" title="Change to Integer">&gt; Double</a>
                                    </div>
                                </div>
                            }
                            else if (prop.DataType == ApiDataType.String &&
                                     double.TryParse(prop.ImportSample, out _))
                            {
                                <div class="btn-group">
                                    @Url.EditButton(prop.ID, "ObjectProperty")
                                    <button type="button" class="btn btn-primary btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a asp-controller="ObjectProperty" asp-action="SetType" asp-route-id="@prop.ID" asp-route-dataType="Double" title="Change to Integer">&gt; Double</a>
                                    </div>
                                </div>
                            }
                            else
                            {
                                @:@Url.EditButton(prop.ID, "ObjectProperty")
                            }
                            @Url.RemoveButton(prop.ID, "ObjectProperty")
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-light">
            <div class="card-header text-white bg-primary">
                Sample JSON
            </div>
            <div class="card-body">
                <pre style="max-height: 500px; overflow-y: auto;">
@Model.Sample
</pre>
            </div>
        </div>
        @if (!string.IsNullOrEmpty(Model.ImportSample))
        {
            <div class="card bg-light">
                <div class="card-header text-white bg-primary">
                    Sample JSON from API
                </div>
                <div class="card-body">
                    <pre style="max-height: 500px; overflow-y: auto;">
@Model.ImportSample
</pre>
                </div>
            </div>
        }
    </div>
</div>
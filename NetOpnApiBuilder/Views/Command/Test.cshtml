@using NetOpnApiBuilder.Extensions
@model NetOpnApiBuilder.ViewModels.TestCommandModel

@{
    ViewBag.Title = "Test Command";
    Layout = "_Layout";
}


<div class="row">
    <div class="col-md-6">
        <div class="card bg-light">
            <div class="card-header text-white bg-primary">
                Test Command: @Model.Command
            </div>
            <div class="card-body">
                <form asp-action="PerformTest" asp-route-id="@Model.Command.ID" method="post">
                    @foreach (var param in Model.Params)
                    {
                        <div class="form-group">
                            <label for="@param.FormName">@param.ClrName (@(param.DataType.ToName(titleCase: false))@(param.Required ? ", required" : ""))</label>
                            <input type="text" id="@param.FormName" name="@param.FormName" value="@param.Value" class="form-control"/>
                            <span class="text-danger">@param.ErrorMessage</span>
                        </div>
                    }
                    @if (Model.UseJsonBody)
                    {
                        <div class="form-group">
                            <label asp-for="JsonBody">Post Object</label>
                            <textarea asp-for="JsonBody" class="form-control" rows="6"></textarea>
                            <span class="text-danger" asp-validation-for="JsonBody"></span>
                        </div>
                    }

                    <button type="submit" class="btn btn-info" title="Test">Test</button>
                    &nbsp;&nbsp;
                    <a asp-action="Edit" asp-route-id="@Model.Command.ID" class="btn btn-light" title="Cancel">Cancel</a>
                </form>
            </div>
        </div>
    </div>
    @if (Model.TestRun)
    {
        <div class="col-md-6">
            <div class="card bg-light">
                @if (string.IsNullOrEmpty(Model.TestError))
                {
                    <div class="card-header bg-info text-white">
                        Success
                    </div>
                    <div class="card-body">
                        <form asp-controller="ObjectType" asp-action="FromJson" method="post" target="_blank">
                            <div class="form-group">
                                <textarea name="json" id="testJson" readonly="readonly" class="form-control" rows="6">@Model.TestResponse</textarea>
                            </div>

                            <div class="form-group">
                                <label><input type="checkbox" name="isDictionary" title="JSON should be treated as dictionary."/> JSON should be treated as dictionary.</label>
                            </div>
                            
                            <input type="hidden" name="typeName" value="@(Model.Command.Controller.Module.ClrName).@(Model.Command.Controller.ClrName).@(Model.Command.ClrName)Result" />
                            <input type="hidden" name="objectTypeId" value="@Model.Command.ResponseBodyObjectTypeID" />
                            <button type="submit" class="btn btn-primary" title="@(Model.Command.ResponseBodyObjectTypeID.HasValue ? "Update" : "Create") Type">@(Model.Command.ResponseBodyObjectTypeID.HasValue ? "Update" : "Create") Type</button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="card-header bg-warning text-white">
                        Failed
                    </div>
                    <div class="card-body">
                        <pre>@Model.TestError</pre>
                    </div>
                }
            </div>
        </div>
    }
</div>